
import json

from django.core.management.base import BaseCommand, CommandError
from card_checker.models import Card, Deck
from card_database.models import Card as CARD_DATABASE

MY_CARDS = {
    # BT1
    "BT1-053": 1,
    "BT1-080": 4,
    "BT1-109": 4,
    "BT1-110": 1,

    # BT3
    "BT3-105": 1,
    "BT3-119": 1,

    # BT5
    "BT5-023": 4,
    "BT5-050": 4,
    "BT5-075": 3,
    "BT5-101": 2,
    "BT5-108": 2,
    "BT5-117": 5,

    # BT8
    "BT8-085": 1,
    "BT8-086": 3,
    "BT8-088": 1,
    "BT8-101": 1,

    # BT9
    "BT9-063": 3,
    "BT9-064": 3,
    "BT9-068": 4,
    "BT9-069": 1,
    "BT9-085": 1,
    "BT9-087": 1,
    "BT9-088": 4,
    "BT9-089": 4,
    "BT9-091": 1,
    "BT9-098": 3,
    "BT9-099": 1,
    "BT9-115": 3,
    "BT9-118": 1,
    "BT9-124": 1,

    # BT15
    "BT15-003": 2,
    "BT15-006": 4,
    "BT15-008": 3,
    "BT15-009": 3,
    "BT15-010": 3,
    "BT15-011": 3,
    "BT15-012": 3,
    "BT15-013": 4,
    "BT15-014": 4,
    "BT15-015": 1,
    "BT15-017": 3,
    "BT15-018": 3,
    "BT15-019": 1,
    "BT15-020": 1,
    "BT15-021": 2,
    "BT15-022": 4,
    "BT15-023": 1,
    "BT15-024": 3,
    "BT15-025": 3,
    "BT15-026": 3,
    "BT15-027": 2,
    "BT15-028": 1,
    "BT15-029": 1,
    "BT15-033": 1,
    "BT15-034": 2,
    "BT15-035": 3,
    "BT15-036": 1,
    "BT15-038": 3,
    "BT15-039": 2,
    "BT15-040": 4,
    "BT15-041": 3,
    "BT15-043": 1,
    "BT15-044": 2,
    "BT15-045": 3,
    "BT15-046": 4,
    "BT15-048": 1,
    "BT15-049": 3,
    "BT15-050": 3,
    "BT15-051": 3,
    "BT15-052": 3,
    "BT15-053": 4,
    "BT15-054": 3,
    "BT15-055": 7,
    "BT15-060": 3,
    "BT15-064": 1,
    "BT15-065": 2,
    "BT15-066": 1,
    "BT15-067": 3,
    "BT15-068": 3,
    "BT15-070": 1,
    "BT15-071": 1,
    "BT15-072": 3,
    "BT15-073": 3,
    "BT15-074": 4,
    "BT15-075": 1,
    "BT15-076": 3,
    "BT15-077": 3,
    "BT15-078": 2,
    "BT15-079": 1,
    "BT15-080": 1,
    "BT15-081": 2,
    "BT15-082": 3,
    "BT15-083": 1,
    "BT15-085": 1,
    "BT15-086": 3,
    "BT15-087": 3,
    "BT15-088": 4,
    "BT15-089": 2,
    "BT15-090": 4,
    "BT15-093": 1,
    "BT15-094": 3,
    "BT15-097": 1,
    "BT15-098": 3,
    "BT15-099": 4,
    "BT15-101": 1,
    "BT15-102": 3,
    "BT15-103": 3,
    "BT15-104": 3,
    "BT15-105": 3,
    "BT15-106": 1,
    "BT15-107": 1,
    "BT15-108": 3,
    "BT15-109": 3,
    "BT15-111": 1,
    "BT15-112": 1,
    "BT15-113": 1,
    "BT15-114": 4,
    "BT15-115": 3,
    "BT15-116": 3,
    "BT15-117": 2,
    "BT15-118": 4,
    "BT15-120": 3,
    "BT15-122": 2,
    "BT15-123": 3,
    "BT15-124": 3,
    "BT15-125": 1,
    "BT15-126": 3,
    "BT15-127": 1,
    "BT15-129": 3,
    "BT15-130": 1,
    "BT15-131": 1,
    "BT15-132": 3,
    "BT15-135": 1,
    "BT15-136": 2,
    "BT15-137": 2,
    "BT15-138": 1,
    "BT15-140": 3,
    "BT15-141": 1,
    "BT15-142": 3,
    "BT15-143": 1,
    "BT15-144": 1,
    "BT15-145": 2,
    "BT15-147": 3,
    "BT15-149": 3,

    # BT16
    "BT16-031": 1,
    "BT16-040": 1,
    "BT16-054": 1,
    "BT16-062": 1,
    "BT16-079": 1,
    "BT16-083": 1,
    "BT16-111": 1,
    "BT16-119": 1,
    "BT16-123": 1,
    "BT16-134": 1,
    "BT16-141": 1,
    "BT16-142": 1,
    "BT16-138": 1,

    # BT17
    "BT17-008": 1,
    "BT17-005": 3,
    "BT17-012": 1,
    "BT17-013": 1,
    "BT17-014": 1,
    "BT17-016": 1,
    "BT17-018": 1,
    "BT17-019": 2,
    "BT17-020": 1,
    "BT17-020": 1,
    "BT17-022": 2,
    "BT17-023": 1,
    "BT17-025": 1,
    "BT17-027": 2,
    "BT17-030": 2,
    "BT17-035": 1,
    "BT17-038": 1,
    "BT17-040": 1,
    "BT17-041": 1,
    "BT17-043": 2,
    "BT17-044": 1,
    "BT17-045": 1,
    "BT17-046": 2,
    "BT17-047": 1,
    "BT17-051": 3,
    "BT17-054": 2,
    "BT17-055": 1,
    "BT17-057": 1,
    "BT17-058": 1,
    "BT17-069": 1,
    "BT17-070": 1,
    "BT17-071": 2,
    "BT17-072": 2,
    "BT17-074": 3,
    "BT17-075": 3,
    "BT17-078": 1,
    "BT17-080": 1,
    "BT17-086": 1,
    "BT17-087": 1,
    "BT17-089": 2,
    "BT17-090": 1,
    "BT17-091": 1,
    "BT17-092": 1,
    "BT17-094": 2,
    "BT17-099": 2,
    "BT17-100": 3,
    "BT17-101": 1,
    "BT17-102": 1,
    "BT17-103": 1,
    "BT17-105": 2,
    "BT17-106": 1,
    "BT17-108": 3,
    "BT17-109": 2,
    "BT17-112": 1,
    "BT17-113": 1,
    "BT17-115": 1,
    "BT17-116": 1,
    "BT17-121": 1,
    "BT17-124": 1,
    "BT17-130": 2,
    "BT17-131": 1,
    "BT17-134": 1,
    "BT17-137": 1,
    "BT17-140": 2,
    "BT17-142": 1,
    "BT17-143": 5,

    # OUTSIDERS
    "DB1-012": 1,
    "DB1-101": 1,
    "DB2-061": 1,
    "P-342": 2,
    "P-377": 2,
    "P-378": 2,
    "P-380": 1,
    "P-388": 1,

    # LEADERS
    "BT6-105": 1,
    "BT9-053": 1,
    "BT12-055": 1,
    "BT13-062": 1,
    "BT14-061": 1,
    "BT15-001": 1,
    "BT15-002": 2,
    "BT15-031": 1,
    "BT15-032": 2,
    "BT15-062": 2,
    "BT15-091": 1,
    "BT15-092": 2,
    "BT15-121": 2,
    "BT17-001": 1,
    "BT17-002": 1,
    "BT17-031": 1,
    "BT17-059": 1,
    "BT17-060": 1,
    "BT17-074": 1,
    "EB1-38": 1,
    "P-068": 1,
    "P-069": 1,
    "P-184": 1,

}


class Command(BaseCommand):
    help = 'Add cards to my All my Cards.'
    def handle(self, *args, **kwargs):
        try:
            import ipdb; ipdb.set_trace()
            my_deck = Deck.objects.get(deck_name='My Deck')
            for card in MY_CARDS:
                
                for number_of_cards in range(MY_CARDS[card]):
                    try:
                        card_database = CARD_DATABASE.objects.filter(card_number=card)[0]
                        card_new = Card.objects.create(
                            card_number=card_database.card_number,
                            card_name=card_database.card_name,
                            card_text=card_database.card_text,
                            thumbnail=card_database.thumbnail,
                            color=card_database.color,
                            card_type=card_database.card_type,
                            energy_cost=card_database.energy_cost,
                            special_trait=card_database.special_trait,
                            power_card=card_database.power_card,
                            combo_power=card_database.combo_power,
                            combo_energy=card_database.combo_energy,
                            era=card_database.era,
                            card_character=card_database.card_character,
                            card_url=card_database.card_url,
                            card_limit=card_database.card_limit,
                            is_ultimate=card_database.is_ultimate,
                            is_super_combo=card_database.is_super_combo,
                            is_dragon_ball=card_database.is_dragon_ball,
                        )

                        card_new.decks.add(my_deck)
                        card_new.save()

                    except IndexError:
                        print(f'Card not found: {card}')
                        pass
            
        except Exception as err:
            raise CommandError(f'ERR: {err}')

        self.stdout.write(self.style.SUCCESS('Successfully Added CARDS!'))
